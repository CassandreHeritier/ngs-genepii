Bootstrap: docker
From: debian:stable

# %environment
# pour les variables

%post
    export DEBIAN_FRONTEND=noninteractive

    ## For PHPMyAdmin
    export APP_PASS="root"
    export ADMIN_DB_USER="root"
    export ADMIN_DB_PAS="root" 
    export APP_DB_PASS="root"

    ## For MySQL
    export DB_PASSWORD="root"
    export DB_USERNAME="root"
    export DB_HOST="localhost"
    export ADDRESS=$(hostname -I | cut -d ' ' -f1)
    # export LISTEN_PORT=12345

    ## For time and language
    export LANGUAGE="C"
    export LC_ALL="C"
    export LC_CTYPE="C"
    export LC_MESSAGES="C"
    export LANG="C"
    # en_US.UTF-8

    ## Update Package List
    apt-get -y update && apt-get -y upgrade

    ## Force Locale
    apt-get -y install locales-all && \
        update-locale LC_ALL=$LC_ALL LANG=$LANG && \
        echo "LC_ALL=$LC_ALL" >> /etc/environment && \
        echo "LANG=$LANG" >> /etc/locale.conf && \
        echo "LC_CTYPE=$LC_CTYPE" >> /etc/default/locale && \
        echo "LC_MESSAGES=$LC_MESSAGES" >> /etc/default/locale && \
        echo "$LANG $LANGUAGE" >> /etc/locale.gen && \
        locale-gen $LC_ALL && \
        ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime && \
        dpkg-reconfigure locales

    ## Force locale and keyboard config for PHPMyAdmin config
    apt-get install -y tzdata keyboard-configuration && \
        dpkg-reconfigure --frontend noninteractive tzdata

    ## Install ssh server
    apt-get -y install openssh-server pwgen
    mkdir -p /var/run/sshd
    sed -i "s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g" /etc/ssh/sshd_config
    sed -i "s/UsePAM.*/UsePAM no/g" /etc/ssh/sshd_config
    sed -i "s/PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config

    ## Basic packages
    apt-get -y install lsb-release software-properties-common curl build-essential gnupg2 \
        dos2unix gcc git git-flow libmcrypt4 libpcre3-dev memcached make python2.7-dev \
        python3 python3-pip re2c unattended-upgrades whois vim libnotify-bin nano less wget \
        apt-utils debconf-utils supervisor zip unzip ca-certificates apt-transport-https

    ## Python modules
    pip3 install mysql-connector-python pandas openpyxl

    ## Add repositories

    # PHP
    # apt-add-repository ppa:ondrej/php
    apt-get -y update && apt-get -y upgrade
    wget -qO - https://packages.sury.org/php/apt.gpg | apt-key add -
    echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" |tee /etc/apt/sources.list.d/php.list
    apt-add-repository "deb https://packages.sury.org/php/ buster main"
    
    # MySQL
    wget https://repo.mysql.com//mysql-apt-config_0.8.22-1_all.deb
    apt-get -y install ./mysql-apt-config_0.8.22-1_all.deb
    # dpkg -i mysql-apt-config_0.8.20-1_all.deb
    # apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
    # sh -c 'echo "deb http://repo.mysql.com/apt/debian/ trusty mysql-5.7" >> /etc/apt/sources.list.d/mysql.list'
    
    # Packagecloud
    curl -s https://packagecloud.io/gpg.key | apt-key add -
    # echo "deb http://packages.blackfire.io/debian any main" | tee /etc/apt/sources.list.d/blackfire.list
    
    # NodeJS
    curl --silent --location https://deb.nodesource.com/setup_14.x | bash -
    
    # Update
    apt-get -y update && apt-get -y upgrade

    ## Install PHP
    # aptitude install au lieu de apt-get pour éviter les paquets non trouvés?
    apt-get install -y php7.4 php7.4-mysql php7.4-cli php7.4-common php7.4-imap php7.4-ldap \
        php7.4-xml php7.4-fpm php7.4-curl php7.4-mbstring php7.4-zip php7.4-intl php7.4-opcache \
        php7.4-readline php7.4-dev php7.4-gd php7.4-soap php7.4-bz2 php7.4-dom php7.4-bcmath
        # php7.4-gmp php7.4-igbinary php-xdebug php-pear php-apcu php-memcached

    apt-get -y update

    ## Install Apache
    apt-get -y install apache2 libapache2-mod-php7.4 libapache2-mod-fcgid

    ## Config Apache
    echo "ServerName 127.0.0.1" >> /etc/apache2/apache2.conf

    a2enmod proxy_fcgi setenvif
    a2enconf php7.4-fpm
    # systemctl reload apache2
    # service apache2 reload
    # systemctl start apache2
    
    ## Install NodeJS and npm
    apt-get install -y nodejs

    ## Install MySQL
    echo mysql-server mysql-server/root_password password $DB_PASSWORD | debconf-set-selections;\
        echo mysql-server mysql-server/root_password_again password $DB_PASSWORD | debconf-set-selections;\
        apt-get install -y mysql-server
        # echo '[mysqld]' >> /etc/mysql/my.cnf && \
        # echo "default_password_lifetime=0" >> /etc/mysql/my.cnf && \
        # echo "bind-address=$ADDRESS" >> /etc/mysql/my.cnf && \
        # echo "innodb_force_recovery = 1" >> /etc/mysql/my.cnf
        # sed -i "/^bind-address/s/bind-address.*=.*/bind-address=$ADDRESS/" /etc/mysql/my.cnf

    ## Start MySQL
    # chmod o+t /tmp
    # chmod -R u+rwx /etc/mysql/
    # chown -R mysql.mysql /etc/mysql/
    dpkg-reconfigure --frontend=noninteractive mysql-server
    chmod -R 770 /var/lib/mysql
    chgrp -R mysql /var/lib/mysql
    # service mysql stop
    # usermod -d /var/lib/mysql/ mysql
    # If other process are listening on 3306 we kill them
    apt-get install lsof
    if ! test -z $(lsof -t -i:3306); then kill -9 $(lsof -t -i:3306); fi
    # service mysql start

    # # Give privileges
    # /usr/sbin/mysqld & \
    #     sleep 10s && \
    #     # echo "DROP USER '$DB_USERNAME'@'$DB_HOST'; \
    #     #    "CREATE USER '$DB_USERNAME'@'$DB_HOST' IDENTIFIED BY '$DB_PASSWORD'; \
    #     echo "GRANT ALL PRIVILEGES ON *.* TO '$DB_USERNAME'@'$DB_HOST' WITH GRANT OPTION; \
    #           FLUSH PRIVILEGES; \
    #           CREATE DATABASE ngs;" | mysql --password=$DB_PASSWORD --user=$DB_USERNAME --host=$DB_HOST

    ## Install PHPMyAdmin
    # cp /path/to/preconfigured-phpmyadmin.conf /etc/dbconfig-common/phpmyadmin.conf
    echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/app-password-confirm password $APP_PASS" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/admin-user string $ADMIN_DB_USER" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/admin-pass password $ADMIN_DB_PAS" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/mysql/app-pass password $APP_DB_PASS" | debconf-set-selections
    echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections

    apt-get install -y phpmyadmin
    echo "Include /etc/phpmyadmin/apache.conf" >> /etc/apache2/apache2.conf
    dpkg-reconfigure --frontend=noninteractive phpmyadmin

    #    sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/7.4/cli/php.ini && \
    #    sed -i "s/display_errors = .*/display_errors = On/" /etc/php/7.4/cli/php.ini && \
    #    sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/7.4/cli/php.ini && \
    #    sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i "s/display_errors = .*/display_errors = On/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i "s/upload_max_filesize = .*/upload_max_filesize = 100M/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i "s/post_max_size = .*/post_max_size = 100M/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/7.4/fpm/php.ini && \
    #    sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php/7.4/fpm/php-fpm.conf && \
    #    sed -i -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    sed -i -e "s/pm.max_children = 5/pm.max_children = 9/g" /etc/php/7.0/fpm/pool.d/www.conf && \
    #    sed -i -e "s/pm.start_servers = 2/pm.start_servers = 3/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    sed -i -e "s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    sed -i -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    sed -i -e "s/pm.max_requests = 500/pm.max_requests = 200/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    sed -i -e "s/;listen.mode = 0660/listen.mode = 0750/g" /etc/php/7.4/fpm/pool.d/www.conf && \
    #    find /etc/php/7.4/cli/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g' {} \;

    # cp fastcgi_params /etc/nginx/
    # phpenmod mcrypt && \
    #     mkdir -p /run/php/ && chown -Rf www-data.www-data /run/php

    # Install Composer
    curl -sS https://getcomposer.org/installer | php && \
        mv composer.phar /usr/local/bin/composer && \
        printf "\nPATH=\"~/.composer/vendor/bin:\$PATH\"\n" | tee -a ~/.bashrc

    # Install Laravel installer
    composer global require "laravel/installer"

    # Clean up
    apt-get remove --purge -y software-properties-common && \
        apt-get autoremove -y && \
        apt-get clean && \
        apt-get autoclean && \
        echo -n > /var/lib/apt/extended_states && \
        rm -rf /var/lib/apt/lists/* && \
        rm -rf /usr/share/man/?? && \
        rm -rf /usr/share/man/??_*
        rm mysql-apt-config_0.8.22-1_all.deb

%runscript
    # service httpd start
    # apachectl restart
    systemctl reload apache2
    systemctl start apache2
    systemctl start mysql
    # systemctl enable mysql
#     echo "Container was created $NOW"
#     echo "Arguments received: $*"
#     exec echo "$@"

%startscript
#     nc -lp $LISTEN_PORT

%test
    exit 0
#     grep -q NAME=\"debian\" /etc/os-release
#     if [ $? -eq 0 ]; then
#         echo "Container base is debian as expected."
#     else
#         echo "Container base is not debian."
#     fi

%help
    SUMMARY
    todo
    KNOWN BUGS
    None
    USAGE
    todo

%labels
    Version 1.0.0
    Singularity Version 3.7.0
    Author heritierca
    Date 2022-03-17
